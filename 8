# ТЕМА 8. ЛОГИКА С CASE И COALESCE В SQL

### CASE WHEN
Оператор `CASE WHEN` позволяет выполнять условные операции в SQL запросах. Вы можете определить различные выражения в зависимости от выполнения различных условий.

Пример:
```sql
SELECT product_name, unit_price,
CASE WHEN units_in_stock >= 100 THEN 'lots of'
	 WHEN units_in_stock >= 50 AND units_in_stock < 100 THEN 'average'
	 WHEN units_in_stock < 50 THEN 'low number'
	 ELSE 'unknown'
END AS amount
FROM products;
```
В этом примере мы выбираем название продукта и цену за единицу продукта, и используем оператор `CASE WHEN` для определения значения столбца `amount` в зависимости от количества продуктов в наличии (`units_in_stock`).

Пример:
```sql
SELECT order_id, order_date,
CASE WHEN date_part('month', order_date) BETWEEN 3 and 5 THEN 'spring' 
     WHEN date_part('month', order_date) BETWEEN 6 and 8 THEN 'summer'
	 WHEN date_part('month', order_date) BETWEEN 9 and 11 THEN 'autumn'
	 ELSE 'winter'
END AS bla
FROM orders;
```
В этом примере мы выбираем идентификатор заказа и дату заказа, и используем оператор `CASE WHEN` для определения значения столбца `bla` в зависимости от месяца в `order_date`.

### COALESCE & NULLIF в теории
Функция `COALESCE` используется для замены `NULL` значений в столбце на заданное значение. Если столбец содержит `NULL`, то `COALESCE` возвращает заданное значение.

Функция `NULLIF` используется для сравнения двух выражений. Если оба выражения равны, то `NULLIF` возвращает `NULL`, в противном случае - значение первого выражения.

### COALESCE & NULLIF на практике
Пример:
```sql
SELECT *
FROM orders
LIMIT 10;
```
Этот запрос выбирает первые 10 записей из таблицы `orders`.

Пример:
```sql
SELECT order_id, order_date, COALESCE(ship_region, 'unknown') AS ship_region
FROM orders
LIMIT 10;
```
Этот запрос выбирает идентификатор заказа и дату заказа, и заменяет `NULL` значения в столбце `ship_region` на 'unknown' с помощью функции `COALESCE`.

Пример:
```sql
SELECT last_name, first_name, COALESCE(region, 'N/A') as region
FROM employees;
```
Этот запрос выбирает фамилию и имя сотрудников, и заменяет `NULL` значения в столбце `region` на 'N/A' с помощью функции `COALESCE`.

Пример:
```sql
SELECT contact_name, COALESCE(NULLIF(city, ''), 'Unknown') as city
FROM customers;
```
Этот запрос выбирает имя контактного лица и использует функцию `NULLIF` для замены пустых строк в столбце `city` на 'Unknown', а затем `COALESCE` для замены `NULL` значений на 'Unknown'.

Пример:
```sql
SELECT dept,
	COALESCE(TO_CHAR(NULLIF(current_year, previous_year), 'FM99999999'), 'Same as last year') AS budget
FROM budgets
WHERE current_year IS NOT NULL;
```
Этот запрос выбирает отдел и использует функцию `NULLIF` для сравнения `current_year` и `previous_year`. Затем используется `TO_CHAR` для форматирования разницы в строку. Если разница равна `NULL`, то возвращается 'Same as last year', в противном случае - отформатированная разница.
